[
  {
    "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
    "name": "AWS SQS Outbound Connector",
    "id": "io.camunda.connectors.AWSSQS.v1",
    "description": "An SQS Outbound Connector",
    "appliesTo": [
      "bpmn:ServiceTask"
    ],
    "category": {
      "id": "connectors",
      "name": "Connectors"
    },
    "groups": [
      {
        "id": "authentication",
        "label": "Authentication"
      },
      {
        "id": "queueProperties",
        "label": "Queue Properties"
      },
      {
        "id": "output",
        "label": "Output"
      },
      {
        "id": "input",
        "label": "Input message data"
      }
    ],
    "properties": [
      {
        "type": "Hidden",
        "value": "io.camunda:sqs:1",
        "binding": {
          "type": "zeebe:taskDefinition:type"
        }
      },
      {
        "label": "SQS Access Key",
        "description": "Provide AWS IAM access key that has permission to send to desired SQS",
        "group": "authentication",
        "type": "String",
        "binding": {
          "type": "zeebe:input",
          "name": "authentication.accessKey"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "SQS Secret Key",
        "description": "Provide AWS IAM secret key that has permission to send to desired SQS",
        "group": "authentication",
        "type": "String",
        "binding": {
          "type": "zeebe:input",
          "name": "authentication.secretKey"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "SQS URL",
        "description": "Specify the URL of the SQS queue where you would like to send message to",
        "group": "queueProperties",
        "type": "String",
        "binding": {
          "type": "zeebe:input",
          "name": "queue.url"
        },
        "constraints": {
          "notEmpty": true,
          "pattern": {
            "value": "(^https?://.+)|(^secrets\\..+)",
            "message": "Must be an http(s) URL or a secret.XYZ"
          }
        }
      },
      {
        "label": "SQS URL",
        "description": "Specify the URL of the SQS queue where you would like to send message to",
        "group": "queueProperties",
        "type": "String",
        "binding": {
          "type": "zeebe:input",
          "name": "queue.region"
        },
        "constraints": {
          "notEmpty": true,
          "pattern": {
            "value": "(^https?://.+)|(^secrets\\..+)",
            "message": "Must be an http(s) URL or a secret.XYZ"
          }
        }
      },
      {
        "label": "Message body",
        "description": "Data to send to the SQS queue",
        "group": "input",
        "type": "Text",
        "binding": {
          "type": "zeebe:input",
          "name": "queue.messageBody"
        },
        "constraints": {
          "notEmpty": true
        },
        "feel": "required"
      },
      {
        "label": "Message attributes",
        "description": "Message atributes metadata",
        "group": "input",
        "type": "Text",
        "binding": {
          "type": "zeebe:input",
          "name": "queue.messageAttributes"
        },
        "constraints": {
          "notEmpty": true
        },
        "feel": "required"
      },
      {
        "label": "Result Variable",
        "description": "Name of variable to store the response in",
        "group": "output",
        "type": "String",
        "binding": {
          "type": "zeebe:taskHeader",
          "key": "resultVariable"
        }
      },
      {
        "label": "Result Expression",
        "description": "Expression to map the response into process variables",
        "group": "output",
        "type": "Text",
        "feel": "required",
        "binding": {
          "type": "zeebe:taskHeader",
          "key": "resultExpression"
        }
      }
    ],
    "icon": {
      "contents": "data:image/svg+xml,%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='18' height='18' viewBox='0 0 70 70' enable-background='new 0 0 70 70' xml:space='preserve'%3E%3Cg%3E%3Cpolygon fill='none' points='53.629,40.689 58.413,35.125 53.563,29.56 '/%3E%3Cpolygon fill='none' points='11.387,40.679 16.17,35.113 11.32,29.547 '/%3E%3Cpath fill='%23AAA877' d='M5.702,16.875v35.734h58.596V16.875H5.702z M11.387,40.679L11.32,29.547l4.85,5.566L11.387,40.679z M26.617,48.601h-5.962V21.661h5.962V48.601z M38.143,48.601H32.18V21.661h5.963V48.601z M48.717,48.601h-5.963V21.661h5.963 V48.601z M53.629,40.689l-0.067-11.13l4.85,5.565L53.629,40.689z'/%3E%3C/g%3E%3C/svg%3E"
    }
  }
]
